// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When user clocked in the company having discounts and successfully fetch data should render properly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#F5F3F3",
      "flex": 1,
      "marginBottom": 24,
      "marginLeft": 24,
      "marginRight": 24,
      "marginTop": 24,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "flex-start",
          "backgroundColor": "green",
          "borderBottomLeftRadius": 15,
          "borderBottomRightRadius": 15,
          "borderTopLeftRadius": 15,
          "borderTopRightRadius": 15,
          "color": "white",
          "height": 52,
          "padding": 10,
          "paddingLeft": 15,
          "width": "37%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 19,
            "fontWeight": "bold",
          }
        }
        title="clocked in"
      >
        clocked in
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    data={
      Array [
        Object {
          "id": 124987341,
          "model_id": 1104624,
          "name": "On-shift Discount - 1",
          "object_name": "Discount",
          "onshift": true,
          "updated_at": 1629077363,
          "uuid": "1dc0fa90-8076-43a7-b7cb-c537466f0d72",
          "value": "25%",
        },
        Object {
          "id": 124978219,
          "model_id": 1104624,
          "name": "On-shift Discount - 2",
          "object_name": "Discount",
          "onshift": true,
          "updated_at": 1629075239,
          "uuid": "e443043b-91e6-49b4-a269-2d9e2f9c8598",
          "value": "35%",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "marginVertical": 10,
      }
    }
    testID="discount-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#45B8DB",
              "borderBottomLeftRadius": 15,
              "borderBottomRightRadius": 15,
              "borderTopLeftRadius": 15,
              "borderTopRightRadius": 15,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "marginVertical": 16,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="On-shift Discount - 1"
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "width": "70%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            On-shift Discount - 1
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": "100%",
                "width": 1,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "textAlign": "center",
                  "width": "25%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            25%
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#45B8DB",
              "borderBottomLeftRadius": 15,
              "borderBottomRightRadius": 15,
              "borderTopLeftRadius": 15,
              "borderTopRightRadius": 15,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "marginVertical": 16,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="On-shift Discount - 2"
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "width": "70%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            On-shift Discount - 2
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": "100%",
                "width": 1,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "textAlign": "center",
                  "width": "25%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            35%
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`When user clocked out the company having discounts and failed to fetch data should render properly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "alignItems": "center",
        "color": "red",
        "fontSize": 20,
        "justifyContent": "center",
      }
    }
  >
    An error has occured: 400
  </Text>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#45B8DB",
        "borderRadius": 4,
        "justifyContent": "center",
        "marginLeft": 20,
        "marginRight": 20,
        "opacity": 1,
        "paddingVertical": 16,
        "position": "relative",
        "top": 20,
        "width": "40%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    >
      Refresh
    </Text>
  </View>
</View>
`;

exports[`When user clocked out the company having discounts and successfully fetch data should render properly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#F5F3F3",
      "flex": 1,
      "marginBottom": 24,
      "marginLeft": 24,
      "marginRight": 24,
      "marginTop": 24,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "flex-start",
          "backgroundColor": "red",
          "borderBottomLeftRadius": 15,
          "borderBottomRightRadius": 15,
          "borderTopLeftRadius": 15,
          "borderTopRightRadius": 15,
          "color": "white",
          "height": 52,
          "padding": 10,
          "width": "37%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 19,
            "fontWeight": "bold",
          }
        }
        title="clocked out"
      >
        clocked out
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    data={
      Array [
        Object {
          "id": 125572990,
          "model_id": 1104624,
          "name": "Off-shift Discount - 1",
          "object_name": "Discount",
          "onshift": false,
          "updated_at": 1629331565,
          "uuid": "dcec8241-5e5f-4a5c-b88c-0245f11407ff",
          "value": "35%",
        },
        Object {
          "id": 124886241,
          "model_id": 1104624,
          "name": "Off-shift Discount - 2",
          "object_name": "Discount",
          "onshift": false,
          "updated_at": 1629025638,
          "uuid": "0c0abdd2-a0c9-4242-8515-b885db8d1efb",
          "value": "40%",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "marginVertical": 10,
      }
    }
    testID="discount-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#45B8DB",
              "borderBottomLeftRadius": 15,
              "borderBottomRightRadius": 15,
              "borderTopLeftRadius": 15,
              "borderTopRightRadius": 15,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "marginVertical": 16,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="Off-shift Discount - 1"
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "width": "70%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            Off-shift Discount - 1
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": "100%",
                "width": 1,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "textAlign": "center",
                  "width": "25%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            35%
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#45B8DB",
              "borderBottomLeftRadius": 15,
              "borderBottomRightRadius": 15,
              "borderTopLeftRadius": 15,
              "borderTopRightRadius": 15,
              "flexDirection": "row",
              "flexWrap": "wrap",
              "marginVertical": 16,
              "opacity": 1,
              "padding": 16,
            }
          }
          testID="Off-shift Discount - 2"
        >
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "width": "70%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            Off-shift Discount - 2
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "white",
                "height": "100%",
                "width": 1,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "fontSize": 19,
                  "textAlign": "center",
                  "width": "25%",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            40%
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
